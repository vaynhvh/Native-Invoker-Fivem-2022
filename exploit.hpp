#include "customapi.h"
#include "bools.h"
#include "../Directories/ImGui/imgui.h"
#include "vector.h"
#include "bones.h"
#include "thing.h"
#include "special.hpp"
//#include "offsetversion."

void exploit()
{
	if (localplayer)
	{

		if (SettingsBool::norecoil)
		{
			if (offsetadress::weaponmanager)
			{
				uintptr_t CWeaponInfoPtr = Read<uintptr_t>(offsetadress::weaponmanager + 0x20);
				if (CWeaponInfoPtr)
				{
					*(float*)(CWeaponInfoPtr + offsetadress::recoil) = 0.f;

				}
			}


		}

		if (SettingsBool::nospread)
		{

			if (offsetadress::weaponmanager)
			{
				uintptr_t CWeaponInfoPtr = Read<uintptr_t>(offsetadress::weaponmanager + 0x20);
				if (CWeaponInfoPtr)
				{
					*(float*)(CWeaponInfoPtr + offsetadress::spread) = 0.f;

				}
			}
		}
		if (SettingsBool::infiniteammo)
		{

			if (offsetadress::weaponmanager)
			{
				uintptr_t CWeaponInfoPtr = Read<uintptr_t>(offsetadress::weaponmanager + 0x20);
				if (CWeaponInfoPtr)
				{
					uintptr_t AmmoInfo = Read<uintptr_t>(CWeaponInfoPtr + 0x60);
					if (AmmoInfo)
					{
						uintptr_t AmmoCount = Read<uintptr_t>(AmmoInfo + 0x8);
						if (AmmoCount)
						{
							uintptr_t AmmoCount2 = Read<uintptr_t>(AmmoCount + 0x0);
							int actualammo = Read<uint32_t>(AmmoCount2 + 0x18);
							
							*(uint32_t*)(AmmoCount2 + 0x18) = 30;
						}

					}

				}
			}
		}
		if (SettingsBool::noclip)
		{
			
			
		}
	}
}